// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserType {
  ADMIN       @map("admin")
  MODERATOR   @map("moderator")
  USER        @map("user")
}

model User {
  userId      String    @id @default(cuid()) @map("user_id")
  googleId    String?   @map("google_id") @unique
  username    String    @unique
  email       String    @unique
  type        UserType  @default(USER)
  password    String
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")
  lastLoginAt DateTime? @map("last_login_at")
  isActive    Boolean   @default(true) @map("is_active")
  profile     Profile?
  opt         Otp?
  token       Token?
  
  @@index([username])
  @@index([email])
  @@map("user")
}

model Profile {
  profileId    String     @id @default(cuid()) @map("profile_id")
  avatarUrl    String?    @map("avatar_url")
  firstName    String?    @map("first_name")
  lastName     String?    @map("last_name")
  dateOfBirth  DateTime?  @map("date_of_birth")
  gender       String?   
  bio          String?
  userId       String     @unique @map("user_id")
  user         User       @relation(fields: [userId], references: [userId], onDelete: Cascade)
  
  @@map("profile")
}

model Token {
  tokenId       String     @id @default(cuid()) @map("token_id")
  userId      String     @unique @map("user_id")
  token       String
  expiresAt   DateTime   @map("expires_at")
  user         User       @relation(fields: [userId], references: [userId], onDelete: Cascade)
  
  @@map("token")
}

model Otp {
  otpId       String     @id @default(cuid()) @map("otp_id")
  code        String     @map("code")
  expiresAt   DateTime   @map("expires_at")
  userId      String     @unique @map("user_id")
  user        User       @relation(fields: [userId], references: [userId], onDelete: Cascade)

  @@map("otp")
}
